Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/testprograms/ServoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.testprograms;\n\nimport com.qualcomm.robotcore.eventloop.opmode.Disabled;\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\nimport com.qualcomm.robotcore.hardware.Servo;\n/**\n * Created by User on 10/5/2017.\n */\n\n@TeleOp (name = \"ServoTest\", group = \"\")\npublic class ServoTest extends LinearOpMode\n{\n\n    Servo servo;\n\n    boolean leftDPadState = false;\n    boolean rightDPadState = false;\n\n    boolean fastIncrement = true;\n\n    double servoPosition = 0.5;\n\n    @Override\n    public void runOpMode()\n    {\n        servo = hardwareMap.servo.get(\"servo\");\n\n\n        servo.setPosition(servoPosition);\n\n        waitForStart();\n\n        while(opModeIsActive())\n        {\n            if(gamepad1.a)\n            {\n                fastIncrement = true;\n            }\n\n            if(gamepad1.b)\n            {\n                fastIncrement = false;\n            }\n\n            if(gamepad1.dpad_left && !leftDPadState)\n            {\n                leftDPadState = true;\n                if(fastIncrement)\n                {\n                    servoPosition -= 0.05;\n                }\n                else\n                {\n                    servoPosition -= 0.01;\n                }\n            }\n\n            else if(!gamepad1.dpad_left)\n            {\n                leftDPadState = false;\n            }\n\n            if(gamepad1.dpad_right && !rightDPadState)\n            {\n                rightDPadState = true;\n\n                if(fastIncrement)\n                {\n                    servoPosition += 0.05;\n                }\n                else\n                {\n                    servoPosition += 0.01;\n                }\n            }\n\n\n            else if(!gamepad1.dpad_right)\n            {\n                rightDPadState = false;\n            }\n\n            if(servoPosition > 1.0)\n            {\n                servoPosition = 1.0;\n            }\n\n            if(servoPosition < 0.0)\n            {\n                servoPosition = 0.0;\n            }\n\n            servo.setPosition(servoPosition);\n\n            telemetry.addData(\"servo Pos\", servo.getPosition());\n            telemetry.addData(\"servoPosition Var\", servoPosition);\n            telemetry.addData(\"Fast Increment\", fastIncrement);\n            telemetry.update();\n\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/org/firstinspires/ftc/teamcode/testprograms/ServoTest.java	(revision cf7738541684b7b0588addd1509256bffc899a53)
+++ TeamCode/src/main/java/org/firstinspires/ftc/teamcode/testprograms/ServoTest.java	(date 1611103569866)
@@ -3,102 +3,51 @@
 import com.qualcomm.robotcore.eventloop.opmode.Disabled;
 import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
 import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
+import com.qualcomm.robotcore.hardware.DcMotor;
+import com.qualcomm.robotcore.hardware.DcMotorEx;
 import com.qualcomm.robotcore.hardware.Servo;
-/**
- * Created by User on 10/5/2017.
- */
 
-@TeleOp (name = "ServoTest", group = "")
+@TeleOp(name = "ServoTest", group = "")
+@Disabled
 public class ServoTest extends LinearOpMode
 {
-
-    Servo servo;
+    private Servo servo;
 
-    boolean leftDPadState = false;
-    boolean rightDPadState = false;
-
-    boolean fastIncrement = true;
-
-    double servoPosition = 0.5;
 
     @Override
     public void runOpMode()
     {
         servo = hardwareMap.servo.get("servo");
+        double waitTime = 1000;
+        double servoPosition = 0;
 
+        boolean fastIncrement = true;
 
-        servo.setPosition(servoPosition);
 
         waitForStart();
 
-        while(opModeIsActive())
+        while (opModeIsActive())
         {
-            if(gamepad1.a)
+            servo.setPosition(servoPosition);
+            waitTime++;
+
+            if (gamepad1.a)
             {
-                fastIncrement = true;
+                servoPosition = servoPosition + 0.1;
             }
-
-            if(gamepad1.b)
+            if (gamepad1.b)
             {
-                fastIncrement = false;
-            }
-
-            if(gamepad1.dpad_left && !leftDPadState)
-            {
-                leftDPadState = true;
-                if(fastIncrement)
-                {
-                    servoPosition -= 0.05;
-                }
-                else
-                {
-                    servoPosition -= 0.01;
-                }
+                servoPosition = servoPosition - 0.1;
             }
 
-            else if(!gamepad1.dpad_left)
+            if (gamepad1.dpad_up)
             {
-                leftDPadState = false;
+                servoPosition = 0;
             }
-
-            if(gamepad1.dpad_right && !rightDPadState)
-            {
-                rightDPadState = true;
-
-                if(fastIncrement)
-                {
-                    servoPosition += 0.05;
-                }
-                else
-                {
-                    servoPosition += 0.01;
-                }
-            }
-
-
-            else if(!gamepad1.dpad_right)
-            {
-                rightDPadState = false;
-            }
-
-            if(servoPosition > 1.0)
-            {
-                servoPosition = 1.0;
-            }
-
-            if(servoPosition < 0.0)
-            {
-                servoPosition = 0.0;
-            }
-
-            servo.setPosition(servoPosition);
-
             telemetry.addData("servo Pos", servo.getPosition());
             telemetry.addData("servoPosition Var", servoPosition);
             telemetry.addData("Fast Increment", fastIncrement);
             telemetry.update();
-
         }
-
     }
 }
